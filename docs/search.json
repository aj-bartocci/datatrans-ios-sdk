{"Protocols/InitialLoaderDelegate.html#/c:@M@Datatrans@objc(pl)DTInitialLoaderDelegate(im)dismissLoader":{"name":"dismissLoader()","abstract":"<p>Invoked when SDK content needs to be presented. The app must dismiss/hide its custom loading animation immediately. For the remainder of the process the SDK&rsquo;s loading animation is used.</p>","parent_name":"InitialLoaderDelegate"},"Protocols/InitialLoaderDelegate.html":{"name":"InitialLoaderDelegate","abstract":"<p>Callback invoked by the SDK when the custom initial loader must be dismissed.</p>"},"Classes/BackendError.html#/c:@M@Datatrans@objc(cs)DTBackendError(py)name":{"name":"name","abstract":"<p>Datatrans error name</p>","parent_name":"BackendError"},"Classes/BackendError.html":{"name":"BackendError","abstract":"<p>This class includes the Datatrans error name</p>"},"Classes/PCIPCVVOnlyCard.html#/c:@M@Datatrans@objc(cs)DTPCIPCVVOnlyCard(py)maskedCardNumber":{"name":"maskedCardNumber","abstract":"<p>The masked card number, e.g. &ldquo;489537xxxxxx6287&rdquo;</p>","parent_name":"PCIPCVVOnlyCard"},"Classes/PCIPCVVOnlyCard.html#/c:@M@Datatrans@objc(cs)DTPCIPCVVOnlyCard(py)expiryDate":{"name":"expiryDate","abstract":"<p>Expiry date</p>","parent_name":"PCIPCVVOnlyCard"},"Classes/PCIPCVVOnlyCard.html#/c:@M@Datatrans@objc(cs)DTPCIPCVVOnlyCard(im)initWithType:maskedCardNumber:expiryDate:":{"name":"init(type:maskedCardNumber:expiryDate:)","abstract":"<p>Use this to initialize a CVV only object.</p>","parent_name":"PCIPCVVOnlyCard"},"Classes/PCIPTokenizationError.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationError(cpy)technical":{"name":"technical","abstract":"<p>The error code for technical errors.</p>","parent_name":"PCIPTokenizationError"},"Classes/PCIPTokenizationError.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationError(cpy)validation":{"name":"validation","abstract":"<p>The error code for validation errors.</p>","parent_name":"PCIPTokenizationError"},"Classes/PCIPTokenizationError.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationError(py)backendError":{"name":"backendError","abstract":"<p>The BackendError that contains the Datatrans error name</p>","parent_name":"PCIPTokenizationError"},"Classes/PCIPCardInfo.html#/c:@M@Datatrans@objc(cs)DTPCIPCardInfo(py)brand":{"name":"brand","abstract":"<p>The brand of the card, e.g. &ldquo;VISA&rdquo;</p>","parent_name":"PCIPCardInfo"},"Classes/PCIPCardInfo.html#/c:@M@Datatrans@objc(cs)DTPCIPCardInfo(py)countryCode":{"name":"countryCode","abstract":"<p>The country of the card, e.g. &ldquo;US&rdquo;</p>","parent_name":"PCIPCardInfo"},"Classes/PCIPCardInfo.html#/c:@M@Datatrans@objc(cs)DTPCIPCardInfo(py)issuer":{"name":"issuer","abstract":"<p>The issuer of the card, e.g. &ldquo;U.S. REGION&rdquo;</p>","parent_name":"PCIPCardInfo"},"Classes/PCIPCardInfo.html#/c:@M@Datatrans@objc(cs)DTPCIPCardInfo(py)maskedCardNumber":{"name":"maskedCardNumber","abstract":"<p>The masked card number, e.g. &ldquo;489537xxxxxx6287&rdquo;</p>","parent_name":"PCIPCardInfo"},"Classes/PCIPCardInfo.html#/c:@M@Datatrans@objc(cs)DTPCIPCardInfo(py)expiryDate":{"name":"expiryDate","abstract":"<p>Expiry date</p>","parent_name":"PCIPCardInfo"},"Classes/PCIPCardInfo.html#/c:@M@Datatrans@objc(cs)DTPCIPCardInfo(py)type":{"name":"type","abstract":"<p>The type of the card, e.g. &ldquo;debit&rdquo;</p>","parent_name":"PCIPCardInfo"},"Classes/PCIPCardInfo.html#/c:@M@Datatrans@objc(cs)DTPCIPCardInfo(py)usage":{"name":"usage","abstract":"<p>The usage of the card, e.g. &ldquo;consumer&rdquo;</p>","parent_name":"PCIPCardInfo"},"Classes/PCIPTokenizationSuccess.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationSuccess(py)cardInfo":{"name":"cardInfo","abstract":"<p>Object representing the (credit or debit) card which was used","parent_name":"PCIPTokenizationSuccess"},"Classes/PCIPTokenizationSuccess.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationSuccess(py)paymentMethodType":{"name":"paymentMethodType","abstract":"<p>The payment method used for this PCI Proxy tokenization.</p>","parent_name":"PCIPTokenizationSuccess"},"Classes/PCIPTokenizationSuccess.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationSuccess(py)tokenizationId":{"name":"tokenizationId","abstract":"<p>The resulting tokenizationId.</p>","parent_name":"PCIPTokenizationSuccess"},"Protocols/PCIPTokenizationDelegate.html#/c:@M@Datatrans@objc(pl)DTPCIPTokenizationDelegate(im)tokenizationDidFinish:result:":{"name":"tokenizationDidFinish(_:result:)","abstract":"<p>This is called after a tokenization has been successfully","parent_name":"PCIPTokenizationDelegate"},"Protocols/PCIPTokenizationDelegate.html#/c:@M@Datatrans@objc(pl)DTPCIPTokenizationDelegate(im)tokenizationDidFail:error:":{"name":"tokenizationDidFail(_:error:)","abstract":"<p>This is called after a tokenization fails or encounters an error.","parent_name":"PCIPTokenizationDelegate"},"Protocols/PCIPTokenizationDelegate.html#/c:@M@Datatrans@objc(pl)DTPCIPTokenizationDelegate(im)tokenizationDidCancel:":{"name":"tokenizationDidCancel(_:)","abstract":"<p>This is called after a tokenization has been cancelled. This callback","parent_name":"PCIPTokenizationDelegate"},"Classes/PCIPTokenizationOptions.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationOptions(py)language":{"name":"language","abstract":"<p>Use this setting to change the UI language. If this is not","parent_name":"PCIPTokenizationOptions"},"Classes/PCIPTokenizationOptions.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationOptions(py)suppressCriticalErrorDialog":{"name":"suppressCriticalErrorDialog","abstract":"<p>Use this setting to display or hide critical errors.</p>","parent_name":"PCIPTokenizationOptions"},"Classes/PCIPTokenizationOptions.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationOptions(py)testing":{"name":"testing","abstract":"<p>Use this setting to switch from production to sandbox. If not specified,","parent_name":"PCIPTokenizationOptions"},"Classes/PCIPTokenizationOptions.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationOptions(py)useCertificatePinning":{"name":"useCertificatePinning","abstract":"<p>Whether secure connections to Datatrans servers require a certificate","parent_name":"PCIPTokenizationOptions"},"Classes/PCIPTokenizationOptions.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenizationOptions(py)customInitialLoaderDelegate":{"name":"customInitialLoaderDelegate","abstract":"<p>Use this option when no card data is entered in our SDK and you want to show your own loading animation during the SDK&rsquo;s initial network requests.</p>","parent_name":"PCIPTokenizationOptions"},"Classes/PCIPTokenization.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenization(py)delegate":{"name":"delegate","abstract":"<p>This delegate will be notified after a tokenization has been finished,","parent_name":"PCIPTokenization"},"Classes/PCIPTokenization.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenization(py)options":{"name":"options","abstract":"<p>The available options for how a tokenization is handled by the mobile SDK.</p>","parent_name":"PCIPTokenization"},"Classes/PCIPTokenization.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenization(py)theme":{"name":"theme","abstract":"<p>The theme to be used by the SDK.</p>","parent_name":"PCIPTokenization"},"Classes/PCIPTokenization.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenization(im)initWithMerchantId:card:":{"name":"init(merchantId:card:)","abstract":"<p>Use this init method if you use your own UI and already have a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Card.html\">Card</a></code> instance with the","parent_name":"PCIPTokenization"},"Classes/PCIPTokenization.html#/s:9Datatrans16PCIPTokenizationC10merchantId18paymentMethodTypesACSS_SayAA07PaymentF4TypeOGtcfc":{"name":"init(merchantId:paymentMethodTypes:)","abstract":"<p>Use this init method to allow the user to enter the card data to be tokenized. After this","parent_name":"PCIPTokenization"},"Classes/PCIPTokenization.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenization(im)initWithMerchantId:cvvOnlyCard:":{"name":"init(merchantId:cvvOnlyCard:)","abstract":"<p>Use this init method to tokenize the CVV of an already tokenized card. After this","parent_name":"PCIPTokenization"},"Classes/PCIPTokenization.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenization(im)initWithMerchantId:paymentMethodTypes:":{"name":"init(merchantId:paymentMethodTypesObjc:)","abstract":"<p>Use this init method to allow the user to enter the  card data to be tokenized. After this","parent_name":"PCIPTokenization"},"Classes/PCIPTokenization.html#/c:@M@Datatrans@objc(cs)DTPCIPTokenization(im)startWithPresentingController:":{"name":"start(presentingController:)","abstract":"<p>Starts the SDK and displays any needed user interface using the provided","parent_name":"PCIPTokenization"},"Classes/PCIPTokenization.html":{"name":"PCIPTokenization","abstract":"<p>Use this class to start a PCI Proxy tokenization.</p>"},"Classes/PCIPTokenizationOptions.html":{"name":"PCIPTokenizationOptions","abstract":"<p>This class can be used to specify miscellaneous options related to the tokenization.</p>"},"Protocols/PCIPTokenizationDelegate.html":{"name":"PCIPTokenizationDelegate","abstract":"<p>Implement PCIPTokenizationDelegate to be notified when a tokenization"},"Classes/PCIPTokenizationSuccess.html":{"name":"PCIPTokenizationSuccess","abstract":"<p>This class aggregates the results of a successful PCI Proxy tokenization.</p>"},"Classes/PCIPCardInfo.html":{"name":"PCIPCardInfo","abstract":"<p>This class represents a (credit or debit) card which was used for PCI Proxy tokenization.</p>"},"Classes/PCIPTokenizationError.html":{"name":"PCIPTokenizationError","abstract":"<p>This class includes the error message of a failed tokenization.</p>"},"Classes/PCIPCVVOnlyCard.html":{"name":"PCIPCVVOnlyCard","abstract":"<p>This class represents a previously tokenized card used in the CVV-only tokenization/verification flow.</p>"},"Classes/SavedSEPA.html#/c:@M@Datatrans@objc(cs)DTSavedSEPA(py)bankCode":{"name":"bankCode","abstract":"<p>A bank code (German: Bankleitzahl) is a unique identification code for a","parent_name":"SavedSEPA"},"Classes/SavedSEPA.html#/c:@M@Datatrans@objc(cs)DTSavedSEPA(py)alias":{"name":"alias","abstract":"<p>Alias for SEPA (ELV).</p>","parent_name":"SavedSEPA"},"Classes/SavedSEPA.html#/c:@M@Datatrans@objc(cs)DTSavedSEPA(im)initWithAlias:":{"name":"init(alias:)","abstract":"<p>This init method has to be used to initialize a saved SEPA (ELV) payment method.</p>","parent_name":"SavedSEPA"},"Classes/SavedSEPA.html#/c:@M@Datatrans@objc(cs)DTSavedSEPA(im)initWithAlias:bankCode:":{"name":"init(alias:bankCode:)","abstract":"<p>This init method has to be used with SEPA (ELV) aliases created before April 15th 2015.","parent_name":"SavedSEPA"},"Classes/SavedReka.html#/c:@M@Datatrans@objc(cs)DTSavedReka(im)initWithAlias:cardExpiryDate:maskedCardNumber:cardholder:":{"name":"init(alias:cardExpiryDate:maskedCardNumber:cardholder:)","abstract":"<p>This init method has to be used to initialize a saved Reka payment method.</p>","parent_name":"SavedReka"},"Classes/SavedPostFinanceCard.html#/c:@M@Datatrans@objc(cs)DTSavedPostFinanceCard(im)initWithAlias:cardExpiryDate:maskedCardNumber:cardholder:":{"name":"init(alias:cardExpiryDate:maskedCardNumber:cardholder:)","abstract":"<p>This init method has to be used to initialize a saved PostFinance Card payment method.</p>","parent_name":"SavedPostFinanceCard"},"Classes/SavedPayPal.html#/c:@M@Datatrans@objc(cs)DTSavedPayPal(py)payPalEmail":{"name":"payPalEmail","abstract":"<p>PayPal e-mail address. This will be used for displaying purposes.</p>","parent_name":"SavedPayPal"},"Classes/SavedPayPal.html#/c:@M@Datatrans@objc(cs)DTSavedPayPal(im)initWithAlias:payPalEmail:":{"name":"init(alias:payPalEmail:)","abstract":"<p>This init method has to be used to initialize a saved PayPal payment method.</p>","parent_name":"SavedPayPal"},"Classes/SavedPaymentMethod.html#/c:@M@Datatrans@objc(cs)DTSavedPaymentMethod(py)alias":{"name":"alias","abstract":"<p>The alias that can be used to process recurring payments or fast checkouts.</p>","parent_name":"SavedPaymentMethod"},"Classes/SavedPaymentMethod.html#/c:@M@Datatrans@objc(cs)DTSavedPaymentMethod(py)displayTitle":{"name":"displayTitle","abstract":"<p>A human readable title.</p>","parent_name":"SavedPaymentMethod"},"Classes/SavedPaymentMethod.html#/c:@M@Datatrans@objc(cs)DTSavedPaymentMethod(py)accessibilityTitle":{"name":"accessibilityTitle","abstract":"<p>For VoiceOver this title is used instead of displayTitle.</p>","parent_name":"SavedPaymentMethod"},"Classes/SavedPaymentMethod.html#/c:@M@Datatrans@objc(cs)DTSavedPaymentMethod(im)initWithType:alias:":{"name":"init(type:alias:)","abstract":"<p>This init method has to be used to initialize a saved payment method.</p>","parent_name":"SavedPaymentMethod"},"Classes/SavedPaymentMethod.html#/c:@M@Datatrans@objc(cs)DTSavedPaymentMethod(cm)createWithJsonString:":{"name":"create(jsonString:)","abstract":"<p>Creates a <code>SavedPaymentMethod</code> from a JSON string.</p>","parent_name":"SavedPaymentMethod"},"Classes/SavedPaymentMethod.html#/c:@M@Datatrans@objc(cs)DTSavedPaymentMethod(cm)createWithLegacySavedPaymentMethodData:":{"name":"create(legacySavedPaymentMethodData:)","abstract":"<p>Creates a <code>SavedPaymentMethod</code> from data encoded by the old payment library.</p>","parent_name":"SavedPaymentMethod"},"Classes/SavedPaymentMethod.html#/c:@M@Datatrans@objc(cs)DTSavedPaymentMethod(im)toJson":{"name":"toJson()","abstract":"<p>Returns a JSON string representation of this saved payment method object.</p>","parent_name":"SavedPaymentMethod"},"Classes/SavedPaymentMethod.html#/c:@M@Datatrans@objc(cs)DTSavedPaymentMethod(im)isValid":{"name":"isValid()","abstract":"<p>This function checks if the saved payment method is valid.</p>","parent_name":"SavedPaymentMethod"},"Classes/SavedCard.html#/c:@M@Datatrans@objc(cs)DTSavedCard(py)cardExpiryDate":{"name":"cardExpiryDate","abstract":"<p>Expiry date</p>","parent_name":"SavedCard"},"Classes/SavedCard.html#/c:@M@Datatrans@objc(cs)DTSavedCard(py)maskedCardNumber":{"name":"maskedCardNumber","abstract":"<p>The masked card number you can use to display that specific card in your app.","parent_name":"SavedCard"},"Classes/SavedCard.html#/c:@M@Datatrans@objc(cs)DTSavedCard(py)cardholder":{"name":"cardholder","abstract":"<p>Cardholder&rsquo;s name</p>","parent_name":"SavedCard"},"Classes/SavedCard.html#/c:@M@Datatrans@objc(cs)DTSavedCard(im)initWithType:alias:cardExpiryDate:maskedCardNumber:cardholder:":{"name":"init(type:alias:cardExpiryDate:maskedCardNumber:cardholder:)","abstract":"<p>Initializes a <code>SavedCard</code> object with the given card data.</p>","parent_name":"SavedCard"},"Classes/SavedCard.html#/c:@M@Datatrans@objc(cs)DTSavedCard(im)isValid":{"name":"isValid()","abstract":"<p>Checks if the expiration date is in the future or not.</p>","parent_name":"SavedCard"},"Classes/SavedBoncard.html#/c:@M@Datatrans@objc(cs)DTSavedBoncard(py)boncardType":{"name":"boncardType","abstract":"<p>The specific subtype of card, which affects the title and logo that is displayed for the card.</p>","parent_name":"SavedBoncard"},"Classes/SavedBoncard.html#/c:@M@Datatrans@objc(cs)DTSavedBoncard(py)maskedCardNumber":{"name":"maskedCardNumber","abstract":"<p>The masked card number you can use to display that specific card in your app.</p>","parent_name":"SavedBoncard"},"Classes/SavedBoncard.html#/c:@M@Datatrans@objc(cs)DTSavedBoncard(im)initWithAlias:maskedCardNumber:boncardType:":{"name":"init(alias:maskedCardNumber:boncardType:)","abstract":"<p>This init method has to be used to initialize a saved Boncard payment method.</p>","parent_name":"SavedBoncard"},"Classes/PaymentMethodTypeMapper.html#/s:9Datatrans23PaymentMethodTypeMapperC02toD010identifierAA0bcD0OSgSS_tFZ":{"name":"toType(identifier:)","abstract":"<p>This function returns the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/PaymentMethodType.html\">PaymentMethodType</a></code> based on the Datatrans","parent_name":"PaymentMethodTypeMapper"},"Classes/PaymentMethodTypeMapper.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodTypeMapper(cm)toTypeWithIdentifier:":{"name":"toTypeObjc(identifier:)","abstract":"<p>This function returns the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/PaymentMethodType.html\">PaymentMethodType</a></code> based on the Datatrans","parent_name":"PaymentMethodTypeMapper"},"Classes/PaymentMethodTypeMapper.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodTypeMapper(cm)toIdentifierWithType:":{"name":"toIdentifier(type:)","abstract":"<p>This function returns the payment method identifier based on the","parent_name":"PaymentMethodTypeMapper"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeVisa":{"name":"Visa","abstract":"<p>Visa payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeMasterCard":{"name":"MasterCard","abstract":"<p>MasterCard payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeDinersClub":{"name":"DinersClub","abstract":"<p>Diners Club payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeAmericanExpress":{"name":"AmericanExpress","abstract":"<p>American Express payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeJCB":{"name":"JCB","abstract":"<p>JCB payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeUATP":{"name":"UATP","abstract":"<p>UATP payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeDiscover":{"name":"Discover","abstract":"<p>Discover payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeSupercard":{"name":"Supercard","abstract":"<p>SUPERCARD payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePostFinanceCard":{"name":"PostFinanceCard","abstract":"<p>PostFinance Card payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePostFinanceEFinance":{"name":"PostFinanceEFinance","abstract":"<p>PostFinance E-Finance payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePayPal":{"name":"PayPal","abstract":"<p>PayPal payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeEasypay":{"name":"Easypay","abstract":"<p>Swisscom Pay payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeSEPA":{"name":"SEPA","abstract":"<p>SEPA (ELV) payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeSwissBilling":{"name":"SwissBilling","abstract":"<p>SwissBilling payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeTwint":{"name":"Twint","abstract":"<p>Twint payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeApplePay":{"name":"ApplePay","abstract":"<p>Apple Pay payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeReka":{"name":"Reka","abstract":"<p>Reka payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeByjuno":{"name":"Byjuno","abstract":"<p>Byjuno payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeSwissPass":{"name":"SwissPass","abstract":"<p>SwissPass payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePowerpay":{"name":"Powerpay","abstract":"<p>Powerpay payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePaycard":{"name":"Paycard","abstract":"<p>Paycard payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePaysafecard":{"name":"Paysafecard","abstract":"<p>Paysafecard payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeBoncard":{"name":"Boncard","abstract":"<p>Gift card / Boncard / Lunch-Check payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeElo":{"name":"Elo","abstract":"<p>Elo card payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeHipercard":{"name":"Hipercard","abstract":"<p>Hipercard payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeKlarna":{"name":"Klarna","abstract":"<p>Klarna payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeDankort":{"name":"Dankort","abstract":"<p>Dankort payment method</p>","parent_name":"PaymentMethodType"},"Classes/PaymentMethod.html#/c:@M@Datatrans@objc(cs)DTPaymentMethod(py)type":{"name":"type","abstract":"<p>Payment method type, e.g. Visa</p>","parent_name":"PaymentMethod"},"Classes/PaymentMethod.html#/c:@M@Datatrans@objc(cs)DTPaymentMethod(im)initWithType:":{"name":"init(type:)","abstract":"<p>This init method initializes a <code>PaymentMethod</code> object with the","parent_name":"PaymentMethod"},"Enums/CardLabelType.html#/c:@M@Datatrans@E@DTCardLabelType@DTCardLabelTypeCreditOrDebitCard":{"name":"creditOrDebitCard","abstract":"<p>Displays as &ldquo;Credit or debit card&rdquo;.</p>","parent_name":"CardLabelType"},"Enums/CardLabelType.html#/c:@M@Datatrans@E@DTCardLabelType@DTCardLabelTypeCreditCard":{"name":"creditCard","abstract":"<p>Displays as &ldquo;Credit card&rdquo;.</p>","parent_name":"CardLabelType"},"Enums/CardLabelType.html#/c:@M@Datatrans@E@DTCardLabelType@DTCardLabelTypeDebitCard":{"name":"debitCard","abstract":"<p>Displays as &ldquo;Debit card&rdquo;.</p>","parent_name":"CardLabelType"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(py)formattedMonth":{"name":"formattedMonth","abstract":"<p>Formats the month to a two digit string.</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(py)formattedYear":{"name":"formattedYear","abstract":"<p>Formats the year to a two digit string.</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(py)month":{"name":"month","abstract":"<p>Card expiry month, [1, 12], e.g. 1 for January or 12 for December</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(py)year":{"name":"year","abstract":"<p>Card expiry year, 2 or 4 digits, e.g. 30 or 2030</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(im)initWithMonth:year:":{"name":"init(month:year:)","abstract":"<p>Initializes the card expiry date with the given month and year.</p>","parent_name":"CardExpiryDate"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(py)number":{"name":"number","abstract":"<p>Card number</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(py)expiryDate":{"name":"expiryDate","abstract":"<p>Expiry date</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(py)cvv":{"name":"cvv","abstract":"<p>Card security code - nil if the card does not have a card security code.</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(py)cardholder":{"name":"cardholder","abstract":"<p>Cardholder&rsquo;s name</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(im)initWithType:number:expiryDate:cvv:cardholder:":{"name":"init(type:number:expiryDate:cvv:cardholder:)","abstract":"<p>Use this to initialize a card object with the card data.</p>","parent_name":"Card"},"Enums/BoncardType.html#/c:@M@Datatrans@E@DTBoncardType@DTBoncardTypeGiftCard":{"name":"giftCard","abstract":"<p>Displays as &ldquo;Gift card&rdquo; with a generic gift card icon</p>","parent_name":"BoncardType"},"Enums/BoncardType.html#/c:@M@Datatrans@E@DTBoncardType@DTBoncardTypeBoncard":{"name":"boncard","abstract":"<p>Displays as &ldquo;Boncard&rdquo;</p>","parent_name":"BoncardType"},"Enums/BoncardType.html#/c:@M@Datatrans@E@DTBoncardType@DTBoncardTypeLunchCheck":{"name":"lunchCheck","abstract":"<p>Displays as &ldquo;Lunch-Check&rdquo; with the Lunch-Check logo</p>","parent_name":"BoncardType"},"Classes/BoncardConfig.html#/s:9Datatrans13BoncardConfigC12boncardTypesACSayAA0B4TypeOG_tcfc":{"name":"init(boncardTypes:)","abstract":"<p>Creates a new Boncard configuration object.</p>","parent_name":"BoncardConfig"},"Classes/BoncardConfig.html#/c:@M@Datatrans@objc(cs)DTBoncardConfig(im)initWithBoncardTypes:":{"name":"init(boncardTypesObjc:)","abstract":"<p>Creates a new Boncard configuration object.</p>","parent_name":"BoncardConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)delegate":{"name":"delegate","abstract":"<p>Delegate object for callbacks during Apple Pay authorization</p>","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)finalSummaryItemLabel":{"name":"finalSummaryItemLabel","abstract":"<p>Use this label to configure the final summary of the purchase. The default","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)request":{"name":"request","abstract":"<p>The request object for further configuration of Apple Pay. Please refer to","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)showApplePayAsSavedPaymentMethod":{"name":"showApplePayAsSavedPaymentMethod","abstract":"<p>Shows Apple Pay additionally on the saved payment method selection screen.</p>","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)showLargeButton":{"name":"showLargeButton","abstract":"<p>Use this option to show Apple Pay as a payment button instead of a","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(cm)hasApplePayWithSupportedNetworks:":{"name":"hasApplePay(withSupportedNetworks:)","abstract":"<p>Although the library automatically hides Apple Pay if no cards are supported,","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(im)initWithApplePayMerchantId:supportedNetworks:countryCode:":{"name":"init(applePayMerchantId:supportedNetworks:countryCode:)","abstract":"<p>Creates a new Apple Pay configuration object with an Apple Pay country code.","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html":{"name":"ApplePayConfig","abstract":"<p>Configuration object for Apple Pay transactions.</p>"},"Classes/BoncardConfig.html":{"name":"BoncardConfig","abstract":"<p>Configuration object for Boncard transactions.</p>"},"Enums/BoncardType.html":{"name":"BoncardType","abstract":"<p>The different types of Boncard, for determining how the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeBoncard\">PaymentMethodType.Boncard</a></code>"},"Classes/Card.html":{"name":"Card","abstract":"<p>Use this class to process raw card data for payments. You should use"},"Classes/CardExpiryDate.html":{"name":"CardExpiryDate","abstract":"<p>Class to be used to represent the card expiry date (month and year).</p>"},"Enums/CardLabelType.html":{"name":"CardLabelType","abstract":"<p>Use this to choose which label to display for the card option"},"Classes/PaymentMethod.html":{"name":"PaymentMethod","abstract":"<p>This is the base class for payment methods. It contains a type to identify the"},"Enums/PaymentMethodType.html":{"name":"PaymentMethodType","abstract":"<p>The payment method used during the transaction.</p>"},"Classes/PaymentMethodTypeMapper.html":{"name":"PaymentMethodTypeMapper","abstract":"<p>Use this class to map the payment method identifiers from Datatrans to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/PaymentMethodType.html\">PaymentMethodType</a></code>.</p>"},"Classes/SavedBoncard.html":{"name":"SavedBoncard","abstract":"<p>This class contains saved Boncard payment method details.</p>"},"Classes/SavedCard.html":{"name":"SavedCard","abstract":"<p>This class contains saved credit or debit card payment method details.</p>"},"Classes/SavedPaymentMethod.html":{"name":"SavedPaymentMethod","abstract":"<p>This is the base class to save a payment method and use it to process recurring payments"},"Classes/SavedPayPal.html":{"name":"SavedPayPal","abstract":"<p>This class contains saved PayPal payment method details.</p>"},"Classes/SavedPostFinanceCard.html":{"name":"SavedPostFinanceCard","abstract":"<p>This class contains saved PostFinance Card payment method details.</p>"},"Classes/SavedReka.html":{"name":"SavedReka","abstract":"<p>This class contains saved Reka card payment method details.</p>"},"Classes/SavedSEPA.html":{"name":"SavedSEPA","abstract":"<p>This class contains saved SEPA (ELV) payment method details.</p>"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)barBackgroundColor":{"name":"barBackgroundColor","abstract":"<p>Background color of the navigation bars. If this is not specified, the","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)barLinkColor":{"name":"barLinkColor","abstract":"<p>Color of the buttons in the navigation bars. If this is not specified,","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)barTitleColor":{"name":"barTitleColor","abstract":"<p>Color of the title within the navigation bars. If this is not specified,","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)buttonColor":{"name":"buttonColor","abstract":"<p>Background color of large buttons, such as the &lsquo;Pay&rsquo; button. If this is","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)buttonTextColor":{"name":"buttonTextColor","abstract":"<p>Text color of large buttons, such as the &lsquo;Pay&rsquo; button. If this is not","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)linkColor":{"name":"linkColor","abstract":"<p>Color of text-only buttons or links and the text cursor. If this is not","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html":{"name":"ThemeConfiguration","abstract":"<p>This class gives you options to customize the theme of the library.</p>"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(cpy)technical":{"name":"technical","abstract":"<p>The error code for technical errors.</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(cpy)validation":{"name":"validation","abstract":"<p>The error code for validation errors.</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(cpy)authentication":{"name":"authentication","abstract":"<p>The error code for authentication errors.</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(cpy)authorization":{"name":"authorization","abstract":"<p>The error code for authorization errors.</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/s:9Datatrans16TransactionErrorC17paymentMethodTypeAA07PaymenteF0OSgvp":{"name":"paymentMethodType","abstract":"<p>The payment method used during the transaction.</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(py)paymentMethodType":{"name":"paymentMethodTypeObjc","abstract":"<p>The payment method used during the transaction.</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(py)transactionId":{"name":"transactionId","abstract":"<p>The identifier of the failed transaction</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(py)backendError":{"name":"backendError","abstract":"<p>The BackendError that contains the Datatrans error name</p>","parent_name":"TransactionError"},"Classes/TransactionSuccess.html#/c:@M@Datatrans@objc(cs)DTTransactionSuccess(py)paymentMethodType":{"name":"paymentMethodType","abstract":"<p>The payment method used during the transaction.</p>","parent_name":"TransactionSuccess"},"Classes/TransactionSuccess.html#/c:@M@Datatrans@objc(cs)DTTransactionSuccess(py)savedPaymentMethod":{"name":"savedPaymentMethod","abstract":"<p>Object containing the saved payment method details.","parent_name":"TransactionSuccess"},"Classes/TransactionSuccess.html#/c:@M@Datatrans@objc(cs)DTTransactionSuccess(py)transactionId":{"name":"transactionId","abstract":"<p>The transactionId that you can use for operations after the","parent_name":"TransactionSuccess"},"Protocols/TransactionDelegate.html#/c:@M@Datatrans@objc(pl)DTTransactionDelegate(im)transactionDidFinish:result:":{"name":"transactionDidFinish(_:result:)","abstract":"<p>This is called after a transaction has been successfully","parent_name":"TransactionDelegate"},"Protocols/TransactionDelegate.html#/c:@M@Datatrans@objc(pl)DTTransactionDelegate(im)transactionDidFail:error:":{"name":"transactionDidFail(_:error:)","abstract":"<p>This is called after a transaction fails or encounters an error.","parent_name":"TransactionDelegate"},"Protocols/TransactionDelegate.html#/c:@M@Datatrans@objc(pl)DTTransactionDelegate(im)transactionDidCancel:":{"name":"transactionDidCancel(_:)","abstract":"<p>This is called after a transaction has been cancelled. This callback","parent_name":"TransactionDelegate"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)appCallbackScheme":{"name":"appCallbackScheme","abstract":"<p>Your unique URL scheme to be used by other apps (e.g. Twint)","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)applePayConfig":{"name":"applePayConfig","abstract":"<p>Specify the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ApplePayConfig.html\">ApplePayConfig</a></code> object here. This is mandatory","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)boncardConfig":{"name":"boncardConfig","abstract":"<p>Specify the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BoncardConfig.html\">BoncardConfig</a></code> object here. This can be used to configure","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)cardLabelType":{"name":"cardLabelType","abstract":"<p>Use this setting to choose which label to display for the card option","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)customKlarnaPaymentMethodName":{"name":"customKlarnaPaymentMethodName","abstract":"<p>Use this to change the name of the Klarna payment method, to","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)suppressCriticalErrorDialog":{"name":"suppressCriticalErrorDialog","abstract":"<p>Use this setting to display or hide critical and transaction errors.</p>","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)testing":{"name":"testing","abstract":"<p>Use this setting to switch from production to sandbox. If not specified,","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)useCertificatePinning":{"name":"useCertificatePinning","abstract":"<p>Whether secure connections to datatrans servers require a certificate","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)customInitialLoaderDelegate":{"name":"customInitialLoaderDelegate","abstract":"<p>Sometimes, apps display a loading animation before starting the SDK. You can set the <code>customInitialLoaderDelegate</code> option if you want to keep showing this animation instead of the SDK&rsquo;s loader during initial SDK network requests.</p>","parent_name":"TransactionOptions"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(py)delegate":{"name":"delegate","abstract":"<p>This delegate will be notified after a transaction has been finished,","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(py)options":{"name":"options","abstract":"<p>The available options for how a transaction is handled by the mobile SDK.</p>","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(py)theme":{"name":"theme","abstract":"<p>The theme to be used by the SDK.</p>","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)initWithMobileToken:":{"name":"init(mobileToken:)","abstract":"<p>Use this init method to start the SDK with a mobile token obtained after a server-to-server init","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)initWithMobileToken:card:":{"name":"init(mobileToken:card:)","abstract":"<p>Use this init method to start the SDK with a mobile token and the provided <code>card</code> for the transaction.</p>","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)initWithMobileToken:savedPaymentMethod:":{"name":"init(mobileToken:savedPaymentMethod:)","abstract":"<p>Use this init method to start the SDK with a mobile token and a single saved payment method.</p>","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)initWithMobileToken:savedPaymentMethods:":{"name":"init(mobileToken:savedPaymentMethods:)","abstract":"<p>Use this init method to start the SDK with a mobile token and a selection of one or more saved","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)startWithPresentingController:":{"name":"start(presentingController:)","abstract":"<p>Starts the SDK and displays any needed user interface using the","parent_name":"Transaction"},"Classes/Transaction.html":{"name":"Transaction","abstract":"<p>Use this class to start a transaction with a <code>mobileToken</code> that has previously been initialized"},"Classes/TransactionOptions.html":{"name":"TransactionOptions","abstract":"<p>This class can be used to specify miscellaneous options related to the transaction.</p>"},"Protocols/TransactionDelegate.html":{"name":"TransactionDelegate","abstract":"<p>Implement TransactionDelegate to be notified when a transaction"},"Classes/TransactionSuccess.html":{"name":"TransactionSuccess","abstract":"<p>This class includes the success message and other details of a transaction."},"Classes/TransactionError.html":{"name":"TransactionError","abstract":"<p>This class includes the error message and other details of a transaction.</p>"},"Transaction.html":{"name":"Transaction"},"Theme%20Options.html":{"name":"Theme Options"},"Payment%20Method.html":{"name":"Payment Method"},"PCI%20Proxy.html":{"name":"PCI Proxy"},"Other%20Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other%20Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"}}