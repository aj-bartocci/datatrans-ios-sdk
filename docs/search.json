{"Classes/RekaToken.html#/c:@M@Datatrans@objc(cs)DTRekaToken(im)initWithToken:cardExpiryDate:maskedCardNumber:cardholder:":{"name":"init(token:cardExpiryDate:maskedCardNumber:cardholder:)","abstract":"<p>This init method has to be used to initialize a Reka payment object.</p>","parent_name":"RekaToken"},"Classes/RekaToken.html#/c:@M@Datatrans@objc(cs)DTRekaToken(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"RekaToken"},"Classes/PostFinanceCardToken.html#/c:@M@Datatrans@objc(cs)DTPostFinanceCardToken(im)initWithToken:cardExpiryDate:maskedCardNumber:cardholder:":{"name":"init(token:cardExpiryDate:maskedCardNumber:cardholder:)","abstract":"<p>This init method has to be used to initialize a PostFinance Card payment object.</p>","parent_name":"PostFinanceCardToken"},"Classes/PostFinanceCardToken.html#/c:@M@Datatrans@objc(cs)DTPostFinanceCardToken(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Refer to the <code>NSCoding</code> protocol</p>","parent_name":"PostFinanceCardToken"},"Classes/PostFinanceCardToken.html#/c:@M@Datatrans@objc(cs)DTPostFinanceCardToken(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"PostFinanceCardToken"},"Classes/PaymentMethodTypeMapper.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodTypeMapper(cm)toTypeWithIdentifier:":{"name":"toType(identifier:)","abstract":"<p>This function returns the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/PaymentMethodType.html\">PaymentMethodType</a></code> based on the Datatrans","parent_name":"PaymentMethodTypeMapper"},"Classes/PaymentMethodTypeMapper.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodTypeMapper(cm)toIdentifierWithType:":{"name":"toIdentifier(type:)","abstract":"<p>This function returns the payment method identifier based on the","parent_name":"PaymentMethodTypeMapper"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeVisa":{"name":"Visa","abstract":"<p>Visa payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeMasterCard":{"name":"MasterCard","abstract":"<p>MasterCard payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeDinersClub":{"name":"DinersClub","abstract":"<p>Diners Club payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeAmericanExpress":{"name":"AmericanExpress","abstract":"<p>American Express payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeJCB":{"name":"JCB","abstract":"<p>JCB payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeMyOne":{"name":"MyOne","abstract":"<p>MyOne payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeUATP":{"name":"UATP","abstract":"<p>UATP payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeDiscover":{"name":"Discover","abstract":"<p>Discover payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeSupercard":{"name":"Supercard","abstract":"<p>SUPERCARD payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePostFinanceCard":{"name":"PostFinanceCard","abstract":"<p>PostFinance Card payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePostFinanceEFinance":{"name":"PostFinanceEFinance","abstract":"<p>PostFinance E-Finance payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePayPal":{"name":"PayPal","abstract":"<p>PayPal payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeEasypay":{"name":"Easypay","abstract":"<p>Easypay payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeSEPA":{"name":"SEPA","abstract":"<p>SEPA (ELV) payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeSwissBilling":{"name":"SwissBilling","abstract":"<p>SwissBilling payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeTwint":{"name":"Twint","abstract":"<p>Twint payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeApplePay":{"name":"ApplePay","abstract":"<p>Apple Pay payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeReka":{"name":"Reka","abstract":"<p>Reka payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeByjuno":{"name":"Byjuno","abstract":"<p>Byjuno payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypeSwissPass":{"name":"SwissPass","abstract":"<p>SwissPass payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePowerpay":{"name":"Powerpay","abstract":"<p>Powerpay payment method</p>","parent_name":"PaymentMethodType"},"Enums/PaymentMethodType.html#/c:@M@Datatrans@E@DTPaymentMethodType@DTPaymentMethodTypePaysafecard":{"name":"Paysafecard","abstract":"<p>Paysafecard payment method</p>","parent_name":"PaymentMethodType"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(py)token":{"name":"token","abstract":"<p>The token that can be used to process recurring payments or fast checkouts.</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(py)displayTitle":{"name":"displayTitle","abstract":"<p>A human readable title.</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(py)accessibilityTitle":{"name":"accessibilityTitle","abstract":"<p>For VoiceOver this title is used instead of displayTitle.</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(im)initWithType:token:":{"name":"init(type:token:)","abstract":"<p>This init method has to be used to initialize a payment object.</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/s:9Datatrans18PaymentMethodTokenC6create4data7decoderACSg5InputQz_xt7Combine15TopLevelDecoderRzlFZ":{"name":"create(data:decoder:)","abstract":"<p>Creates a <code>PaymentMethodToken</code> from encoded data using the given","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(cm)createWithJsonString:":{"name":"create(jsonString:)","abstract":"<p>Creates a <code>PaymentMethodToken</code> from a JSON string.</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(cm)createWithLegacyTokenData:":{"name":"create(legacyTokenData:)","abstract":"<p>Creates a <code>PaymentMethodToken</code> from data encoded by the old payment library.</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/s:9Datatrans18PaymentMethodTokenC6toJsonSSSgyKF":{"name":"toJson()","abstract":"<p>Returns a JSON string representation of this token payment object. This is a convenience method","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(im)isValid":{"name":"isValid()","abstract":"<p>This function checks if the payment method token is valid. This function","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(py)description":{"name":"description","abstract":"<p>Refer to the <code>NSObject</code> protocol</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/s:9Datatrans18PaymentMethodTokenC6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","abstract":"<p>Refer to the <code>Encodable</code> protocol</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Refer to the <code>NSCoding</code> protocol</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethodToken.html#/c:@M@Datatrans@objc(cs)DTPaymentMethodToken(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"PaymentMethodToken"},"Classes/PaymentMethod.html#/c:@M@Datatrans@objc(cs)DTPaymentMethod(py)type":{"name":"type","abstract":"<p>Payment method type, e.g. Visa</p>","parent_name":"PaymentMethod"},"Classes/PaymentMethod.html#/c:@M@Datatrans@objc(cs)DTPaymentMethod(im)initWithType:":{"name":"init(type:)","abstract":"<p>This init method initializes a <code>PaymentMethod</code> object with the","parent_name":"PaymentMethod"},"Classes/PaymentMethod.html#/s:9Datatrans13PaymentMethodC4fromACs7Decoder_p_tKcfc":{"name":"init(from:)","abstract":"<p>Refer to the <code>Decodable</code> protocol</p>","parent_name":"PaymentMethod"},"Classes/PaymentMethod.html#/s:9Datatrans13PaymentMethodC6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","abstract":"<p>Refer to the <code>Encodable</code> protocol</p>","parent_name":"PaymentMethod"},"Classes/PaymentMethod.html#/c:@M@Datatrans@objc(cs)DTPaymentMethod(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"PaymentMethod"},"Classes/PaymentMethod.html#/c:@M@Datatrans@objc(cs)DTPaymentMethod(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Refer to the <code>NSCoding</code> protocol</p>","parent_name":"PaymentMethod"},"Classes/PaymentMethod.html#/c:@M@Datatrans@objc(cs)DTPaymentMethod(im)encodeWithCoder:":{"name":"encode(with:)","abstract":"<p>Refer to the <code>NSCoding</code> protocol</p>","parent_name":"PaymentMethod"},"Classes/PayPalToken.html#/c:@M@Datatrans@objc(cs)DTPayPalToken(py)payPalEmail":{"name":"payPalEmail","abstract":"<p>PayPal e-mail address. This will be used for displaying purposes.</p>","parent_name":"PayPalToken"},"Classes/PayPalToken.html#/c:@M@Datatrans@objc(cs)DTPayPalToken(im)initWithToken:payPalEmail:":{"name":"init(token:payPalEmail:)","abstract":"<p>This init method has to be used to initialize a PayPal payment object.</p>","parent_name":"PayPalToken"},"Classes/PayPalToken.html#/c:@M@Datatrans@objc(cs)DTPayPalToken(py)displayTitle":{"name":"displayTitle","abstract":"<p>A human readable title.</p>","parent_name":"PayPalToken"},"Classes/PayPalToken.html#/c:@M@Datatrans@objc(cs)DTPayPalToken(py)accessibilityTitle":{"name":"accessibilityTitle","abstract":"<p>For VoiceOver this title is used instead of displayTitle.</p>","parent_name":"PayPalToken"},"Classes/PayPalToken.html#/s:9Datatrans11PayPalTokenC6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","abstract":"<p>Refer to the <code>Encodable</code> protocol</p>","parent_name":"PayPalToken"},"Classes/PayPalToken.html#/c:@M@Datatrans@objc(cs)DTPayPalToken(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Refer to the <code>NSCoding</code> protocol</p>","parent_name":"PayPalToken"},"Classes/PayPalToken.html#/c:@M@Datatrans@objc(cs)DTPayPalToken(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"PayPalToken"},"Classes/SEPAToken.html#/c:@M@Datatrans@objc(cs)DTSEPAToken(py)bankCode":{"name":"bankCode","abstract":"<p>A bank code (German: Bankleitzahl) is a unique identification code for a","parent_name":"SEPAToken"},"Classes/SEPAToken.html#/c:@M@Datatrans@objc(cs)DTSEPAToken(py)token":{"name":"token","abstract":"<p>Token for SEPA (ELV).</p>","parent_name":"SEPAToken"},"Classes/SEPAToken.html#/c:@M@Datatrans@objc(cs)DTSEPAToken(im)initWithToken:":{"name":"init(token:)","abstract":"<p>This init method has to be used to initialize a SEPA (ELV) payment object.</p>","parent_name":"SEPAToken"},"Classes/SEPAToken.html#/c:@M@Datatrans@objc(cs)DTSEPAToken(im)initWithToken:bankCode:":{"name":"init(token:bankCode:)","abstract":"<p>This init method has to be used with SEPA (ELV) tokens created before April 15th 2015.","parent_name":"SEPAToken"},"Classes/SEPAToken.html#/c:@M@Datatrans@objc(cs)DTSEPAToken(py)displayTitle":{"name":"displayTitle","abstract":"<p>A human readable title.</p>","parent_name":"SEPAToken"},"Classes/SEPAToken.html#/c:@M@Datatrans@objc(cs)DTSEPAToken(py)accessibilityTitle":{"name":"accessibilityTitle","abstract":"<p>For VoiceOver this title is used instead of displayTitle.</p>","parent_name":"SEPAToken"},"Classes/SEPAToken.html#/c:@M@Datatrans@objc(cs)DTSEPAToken(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"SEPAToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(py)cardExpiryDate":{"name":"cardExpiryDate","abstract":"<p>Expiry date</p>","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(py)maskedCardNumber":{"name":"maskedCardNumber","abstract":"<p>The masked card number you can use to display that specific card in your app.","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(py)cardholder":{"name":"cardholder","abstract":"<p>Cardholder&rsquo;s name</p>","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(im)initWithType:token:cardExpiryDate:maskedCardNumber:cardholder:":{"name":"init(type:token:cardExpiryDate:maskedCardNumber:cardholder:)","abstract":"<p>Initializes a <code>CardToken</code> object with the given card data.</p>","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(py)displayTitle":{"name":"displayTitle","abstract":"<p>A human readable title e.g. &lsquo;•••• 6095&rsquo;.</p>","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(py)accessibilityTitle":{"name":"accessibilityTitle","abstract":"<p>For VoiceOver this title is used instead of displayTitle.</p>","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(im)isValid":{"name":"isValid()","abstract":"<p>Checks if the expiration date is in the future or not.</p>","parent_name":"CardToken"},"Classes/CardToken.html#/s:9Datatrans9CardTokenC6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","abstract":"<p>Refer to the <code>Encodable</code> protocol</p>","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Refer to the <code>NSCoding</code> protocol</p>","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(py)description":{"name":"description","abstract":"<p>Refer to the <code>NSObject</code> protocol</p>","parent_name":"CardToken"},"Classes/CardToken.html#/c:@M@Datatrans@objc(cs)DTCardToken(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"CardToken"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(py)month":{"name":"month","abstract":"<p>Card expiry month, [1, 12], e.g. 1 for January or 12 for December</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(py)year":{"name":"year","abstract":"<p>Card expiry year, 2 or 4 digits, e.g. 30 or 2030</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(im)initWithMonth:year:":{"name":"init(month:year:)","abstract":"<p>Initializes the card expiry date with the given month and year.</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/s:9Datatrans14CardExpiryDateC4fromACs7Decoder_p_tKcfc":{"name":"init(from:)","abstract":"<p>Refer to the <code>Decodable</code> protocol</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/s:9Datatrans14CardExpiryDateC6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","abstract":"<p>Refer to the <code>Encodable</code> protocol</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(py)description":{"name":"description","abstract":"<p>Refer to the <code>NSObject</code> protocol</p>","parent_name":"CardExpiryDate"},"Classes/CardExpiryDate.html#/c:@M@Datatrans@objc(cs)DTCardExpiryDate(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"CardExpiryDate"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(py)number":{"name":"number","abstract":"<p>Card number</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(py)expiryDate":{"name":"expiryDate","abstract":"<p>Expiry date</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(py)cvv":{"name":"cvv","abstract":"<p>Card security code - nil if the card does not have a card security code.</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(py)cardholder":{"name":"cardholder","abstract":"<p>Cardholder&rsquo;s name</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(im)initWithType:number:expiryDate:cvv:cardholder:":{"name":"init(type:number:expiryDate:cvv:cardholder:)","abstract":"<p>Use this to initialize a card object with the card data.</p>","parent_name":"Card"},"Classes/Card.html#/c:@M@Datatrans@objc(cs)DTCard(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Refer to the <code>NSCoding</code> protocol</p>","parent_name":"Card"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)delegate":{"name":"delegate","abstract":"<p>Delegate object for callbacks during Apple Pay authorization</p>","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)finalSummaryItemLabel":{"name":"finalSummaryItemLabel","abstract":"<p>Use this label to configure the final summary of the purchase. The default","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)request":{"name":"request","abstract":"<p>The request object for further configuration of Apple Pay. Please refer to","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(py)showLargeButton":{"name":"showLargeButton","abstract":"<p>Use this option to show Apple Pay as a payment button instead of a","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(cm)hasApplePayWithSupportedNetworks:":{"name":"hasApplePay(withSupportedNetworks:)","abstract":"<p>Although the library automatically hides Apple Pay if no cards are supported,","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(im)initWithApplePayMerchantId:supportedNetworks:countryCode:":{"name":"init(applePayMerchantId:supportedNetworks:countryCode:)","abstract":"<p>Creates a new Apple Pay configuration object with an Apple Pay country code.","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html#/c:@M@Datatrans@objc(cs)DTApplePayConfig(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"ApplePayConfig"},"Classes/ApplePayConfig.html":{"name":"ApplePayConfig","abstract":"<p>Configuration object for Apple Pay transactions.</p>"},"Classes/Card.html":{"name":"Card","abstract":"<p>Use this class to process raw card data for payments. You should use"},"Classes/CardExpiryDate.html":{"name":"CardExpiryDate","abstract":"<p>Class to be used to represent the card expiry date (month and year).</p>"},"Classes/CardToken.html":{"name":"CardToken","abstract":"<p>This class contains the token information about a credit or debit card registration"},"Classes/SEPAToken.html":{"name":"SEPAToken","abstract":"<p>This class contains the token information about a SEPA (ELV) registration from"},"Classes/PayPalToken.html":{"name":"PayPalToken","abstract":"<p>This class contains the token information about a PayPal registration from"},"Classes/PaymentMethod.html":{"name":"PaymentMethod","abstract":"<p>This is the base class for payment methods. It contains a type to identify the"},"Classes/PaymentMethodToken.html":{"name":"PaymentMethodToken","abstract":"<p>This class is the base token class to gather token information and process"},"Enums/PaymentMethodType.html":{"name":"PaymentMethodType","abstract":"<p>The payment method used during the transaction.</p>"},"Classes/PaymentMethodTypeMapper.html":{"name":"PaymentMethodTypeMapper","abstract":"<p>Use this class to map the payment method identifiers from Datatrans to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/PaymentMethodType.html\">PaymentMethodType</a></code>.</p>"},"Classes/PostFinanceCardToken.html":{"name":"PostFinanceCardToken","abstract":"<p>This class contains the token information about a PostFinance Card  registration from"},"Classes/RekaToken.html":{"name":"RekaToken","abstract":"<p>This class contains the token information about a Reka card registration from"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)barBackgroundColor":{"name":"barBackgroundColor","abstract":"<p>Background color of the navigation bars. If this is not specified, the","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)barLinkColor":{"name":"barLinkColor","abstract":"<p>Color of the buttons in the navigation bars. If this is not specified,","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)barTitleColor":{"name":"barTitleColor","abstract":"<p>Color of the title within the navigation bars. If this is not specified,","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)buttonColor":{"name":"buttonColor","abstract":"<p>Background color of large buttons, such as the &lsquo;Pay&rsquo; button. If this is","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)buttonTextColor":{"name":"buttonTextColor","abstract":"<p>Text color of large buttons, such as the &lsquo;Pay&rsquo; button. If this is not","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html#/c:@M@Datatrans@objc(cs)DTThemeConfiguration(py)linkColor":{"name":"linkColor","abstract":"<p>Color of text-only buttons or links and the text cursor. If this is not","parent_name":"ThemeConfiguration"},"Classes/ThemeConfiguration.html":{"name":"ThemeConfiguration","abstract":"<p>This class gives you options to customize the theme of the library.</p>"},"Classes/TransactionError.html#/s:9Datatrans16TransactionErrorC17paymentMethodTypeAA07PaymenteF0OSgvp":{"name":"paymentMethodType","abstract":"<p>The payment method used during the transaction.</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(py)paymentMethodType":{"name":"paymentMethodTypeObjc","abstract":"<p>The payment method used during the transaction.</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(py)transactionId":{"name":"transactionId","abstract":"<p>The identifier of the failed transaction</p>","parent_name":"TransactionError"},"Classes/TransactionError.html#/c:@M@Datatrans@objc(cs)DTTransactionError(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Refer to the <code>NSCopying</code> protocol</p>","parent_name":"TransactionError"},"Classes/TransactionSuccess.html#/c:@M@Datatrans@objc(cs)DTTransactionSuccess(py)paymentMethodType":{"name":"paymentMethodType","abstract":"<p>The payment method used during the transaction.</p>","parent_name":"TransactionSuccess"},"Classes/TransactionSuccess.html#/c:@M@Datatrans@objc(cs)DTTransactionSuccess(py)paymentMethodToken":{"name":"paymentMethodToken","abstract":"<p>Object containing the token details of the payment method.","parent_name":"TransactionSuccess"},"Classes/TransactionSuccess.html#/c:@M@Datatrans@objc(cs)DTTransactionSuccess(py)transactionId":{"name":"transactionId","abstract":"<p>The transactionId that you can use for operations after the","parent_name":"TransactionSuccess"},"Protocols/TransactionDelegate.html#/c:@M@Datatrans@objc(pl)DTTransactionDelegate(im)transactionDidFinish:result:":{"name":"transactionDidFinish(_:result:)","abstract":"<p>This is called after a transaction has been successfully","parent_name":"TransactionDelegate"},"Protocols/TransactionDelegate.html#/c:@M@Datatrans@objc(pl)DTTransactionDelegate(im)transactionDidFail:error:":{"name":"transactionDidFail(_:error:)","abstract":"<p>This is called after a transaction fails or encounters an error.","parent_name":"TransactionDelegate"},"Protocols/TransactionDelegate.html#/c:@M@Datatrans@objc(pl)DTTransactionDelegate(im)transactionDidCancel:":{"name":"transactionDidCancel(_:)","abstract":"<p>This is called after a transaction has been cancelled. This callback","parent_name":"TransactionDelegate"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)appCallbackScheme":{"name":"appCallbackScheme","abstract":"<p>Your unique URL scheme to be used by other apps (e.g. Twint)","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)applePayConfig":{"name":"applePayConfig","abstract":"<p>Specify the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ApplePayConfig.html\">ApplePayConfig</a></code> object here. This is mandatory","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)suppressTransactionErrorDialog":{"name":"suppressTransactionErrorDialog","abstract":"<p>Use this setting to display or hide critical and transaction errors.</p>","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)testing":{"name":"testing","abstract":"<p>Use this setting to switch from production to sandbox. If not specified,","parent_name":"TransactionOptions"},"Classes/TransactionOptions.html#/c:@M@Datatrans@objc(cs)DTTransactionOptions(py)useCertificatePinning":{"name":"useCertificatePinning","abstract":"<p>Whether secure connections to datatrans servers require a certificate","parent_name":"TransactionOptions"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(py)delegate":{"name":"delegate","abstract":"<p>This delegate will be notified after a transaction has been finished,","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(py)options":{"name":"options","abstract":"<p>The available options for how a transaction is handled by the mobile SDK.</p>","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(py)theme":{"name":"theme","abstract":"<p>The theme to be used by the SDK.</p>","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)initWithMobileToken:":{"name":"init(mobileToken:)","abstract":"<p>Use this init method to start the SDK with a mobile token obtained after a server-to-server init","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)initWithMobileToken:card:":{"name":"init(mobileToken:card:)","abstract":"<p>Use this init method to start the SDK with a mobile token just like in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)initWithMobileToken:\">init(mobileToken:)</a></code>","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)initWithMobileToken:paymentMethodTokens:":{"name":"init(mobileToken:paymentMethodTokens:)","abstract":"<p>Use this init method to start the SDK with a mobile token obtained after a server-to-server init","parent_name":"Transaction"},"Classes/Transaction.html#/c:@M@Datatrans@objc(cs)DTTransaction(im)startWithPresentingController:":{"name":"start(presentingController:)","abstract":"<p>Starts the SDK and displays any needed user interface using the","parent_name":"Transaction"},"Classes/Transaction.html":{"name":"Transaction","abstract":"<p>Use this class to start a transaction with a <code>mobileToken</code> that has previously been initialized"},"Classes/TransactionOptions.html":{"name":"TransactionOptions","abstract":"<p>This class can be used to specify miscellaneous options related to the transaction.</p>"},"Protocols/TransactionDelegate.html":{"name":"TransactionDelegate","abstract":"<p>Implement TransactionDelegate to be notified when a transaction"},"Classes/TransactionSuccess.html":{"name":"TransactionSuccess","abstract":"<p>This class includes the success message and other details of a transaction."},"Classes/TransactionError.html":{"name":"TransactionError","abstract":"<p>This class includes the error message and other details of a transaction.</p>"},"Transaction.html":{"name":"Transaction"},"Theme%20Options.html":{"name":"Theme Options"},"Payment%20Method.html":{"name":"Payment Method"}}